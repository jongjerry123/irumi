-- 기존 테이블 지우고 시작
DROP TABLE TB_CAREER_PLAN 
CASCADE CONSTRAINTS;

DROP TABLE TB_SPEC_SCHEDULE 
CASCADE CONSTRAINTS;

DROP TABLE TB_CHAT_HISTORY 
CASCADE CONSTRAINTS;

DROP TABLE TB_POST 
CASCADE CONSTRAINTS;

DROP TABLE TB_COMMENT
CASCADE CONSTRAINTS;

DROP TABLE TB_ACTIVITY 
CASCADE CONSTRAINTS;

DROP TABLE TB_JOB 
CASCADE CONSTRAINTS;

DROP TABLE TB_SPEC 
CASCADE CONSTRAINTS;

DROP TABLE TB_USER 
CASCADE CONSTRAINTS;

DROP TABLE TB_POST_REPORT 
CASCADE CONSTRAINTS;

DROP TABLE TB_COM_REPORT 
CASCADE CONSTRAINTS;

DROP TABLE TB_JOB_LIST
CASCADE CONSTRAINTS;

DROP TABLE TB_POST_RECOMMEND
CASCADE CONSTRAINTS;

DROP TABLE TB_COM_RECOMMEND
CASCADE CONSTRAINTS;


-- 기존 시퀀스 지우고 시작
DROP SEQUENCE SEQ_TB_POST_POST_ID;

DROP SEQUENCE SEQ_TB_COMMENT_COM_ID;

DROP SEQUENCE SEQ_MSG_ID;

DROP SEQUENCE SEQ_TB_POST_REPORT_REPORT_ID;

DROP SEQUENCE SEQ_TB_COM_REPORT_REPORT_ID;

DROP SEQUENCE SEQ_TB_JOB;

DROP SEQUENCE SEQ_TB_SPEC;

DROP SEQUENCE SEQ_TB_SPEC_SCHEDULE;

DROP SEQUENCE SEQ_TB_ACTIVITY;



-- 테이블 생성
-- TB_USER

CREATE TABLE TB_USER (
    USER_ID            VARCHAR2(50) PRIMARY KEY,
    USER_PWD           VARCHAR2(100) NOT NULL,
    USER_NAME          VARCHAR2(100) NOT NULL,
    USER_EMAIL         VARCHAR2(100) NOT NULL,
    REGISTDATE           DATE DEFAULT SYSDATE NOT NULL,
    USER_UNIVERSITY    VARCHAR2(100),
    USER_DEGREE        VARCHAR2(30),
    USER_GRADUATE     VARCHAR2(10),
    USER_POINT         NUMBER(3,2),
    USER_AUTHORITY     VARCHAR2(50) DEFAULT '유저' NOT NULL,
    USER_LOGIN_TYPE    NUMBER NOT NULL,
    USER_SOCIAL_ID      VARCHAR2(50),
    EMAIL_VERIFICATION    VARCHAR2(20),
    EMAIL_VERIFICATION_TOKEN    VARCHAR2(50) UNIQUE,
    EMAIL_TOKEN_EXPIRY      DATE,
    CH_PWD DATE DEFAULT SYSDATE NOT NULL
);

COMMENT ON COLUMN TB_USER.USER_ID IS '아이디';
COMMENT ON COLUMN TB_USER.USER_PWD IS '비밀번호';
COMMENT ON COLUMN TB_USER.USER_NAME IS '이름';
COMMENT ON COLUMN TB_USER.USER_EMAIL IS '이메일';
COMMENT ON COLUMN TB_USER.REGISTDATE IS '가입일';
COMMENT ON COLUMN TB_USER.USER_UNIVERSITY IS '대학교';
COMMENT ON COLUMN TB_USER.USER_DEGREE IS '학위';
COMMENT ON COLUMN TB_USER.USER_GRADUATE IS '졸업 여부';
COMMENT ON COLUMN TB_USER.USER_POINT IS '포인트';
COMMENT ON COLUMN TB_USER.USER_AUTHORITY IS '권한';
COMMENT ON COLUMN TB_USER.USER_LOGIN_TYPE IS '로그인 타입';
COMMENT ON COLUMN TB_USER.USER_SOCIAL_ID IS '전달받은 소셜ID';
COMMENT ON COLUMN TB_USER.EMAIL_VERIFICATION IS '인증여부';
COMMENT ON COLUMN TB_USER.EMAIL_VERIFICATION_TOKEN IS '이메일 토큰 저장';
COMMENT ON COLUMN TB_USER.EMAIL_TOKEN_EXPIRY IS '토큰유효시간';
COMMENT ON COLUMN TB_USER.CH_PWD IS '최종비밀번호수정일';

-- TB_POST

CREATE TABLE TB_POST (
    POST_ID       NUMBER PRIMARY KEY,
    POST_WRITER   VARCHAR2(50) NOT NULL,
    POST_TYPE     VARCHAR2(30)  NOT NULL,
    POST_TITLE    VARCHAR2(100),
    POST_CONTENT  VARCHAR2(3500),
    POST_TIME     DATE  DEFAULT SYSDATE  NOT NULL,
    POST_VIEWCOUNT    NUMBER DEFAULT 0  NOT NULL,
    POST_REPORT_COUNT   NUMBER DEFAULT 0  NOT NULL,
    POST_RECOMMEND      NUMBER DEFAULT 0  NOT NULL,
    POST_SAVEDNAME  VARCHAR2(255),
    POST_ORIGINALNAME   VARCHAR2(255),
    CONSTRAINT FK_POST_WRITER FOREIGN KEY (POST_WRITER) REFERENCES TB_USER(USER_ID)
);

COMMENT ON COLUMN TB_POST.POST_ID  IS '게시판글아이디';
COMMENT ON COLUMN TB_POST.POST_WRITER  IS '게시글작성자';
COMMENT ON COLUMN TB_POST.POST_TYPE  IS '게시글분류';
COMMENT ON COLUMN TB_POST.POST_TITLE  IS '게시글제목';
COMMENT ON COLUMN TB_POST.POST_CONTENT  IS '게시글내용';
COMMENT ON COLUMN TB_POST.POST_TIME  IS '게시글작성날짜';
COMMENT ON COLUMN TB_POST.POST_VIEWCOUNT  IS '게시글조회수';
COMMENT ON COLUMN TB_POST.POST_REPORT_COUNT  IS '게시글신고수';
COMMENT ON COLUMN TB_POST.POST_RECOMMEND  IS '게시판추천수';
COMMENT ON COLUMN TB_POST.POST_SAVEDNAME  IS '첨부파일 웹에 저장한 첨부파일 이름';
COMMENT ON COLUMN TB_POST.POST_ORIGINALNAME  IS '첨부파일 본 이름';


CREATE SEQUENCE SEQ_TB_POST_POST_ID
START WITH 1
INCREMENT BY 1
NOCACHE;

-- TB_COMMENT

CREATE TABLE TB_COMMENT (
	COM_ID	NUMBER	PRIMARY KEY,
	COM_WR_ID	VARCHAR2(50),
	POST_ID	NUMBER	NOT NULL,
COM_PARENT_ID	 NUMBER, 
	COM_CONTENT	VARCHAR2(500),
	COM_TIME	 	DATE DEFAULT SYSDATE NOT NULL,
	COM_RECOMMEND 	NUMBER DEFAULT 0  NOT NULL,
	COM_REPORT_COUNT  	NUMBER  DEFAULT 0 NOT NULL,
	

	CONSTRAINT FK_POST_ID FOREIGN KEY (POST_ID) REFERENCES TB_POST(POST_ID)
);

COMMENT ON COLUMN TB_COMMENT.COM_ID  IS '댓글아이디';
COMMENT ON COLUMN TB_COMMENT.COM_WR_ID IS '댓글작성자아이디';
COMMENT ON COLUMN TB_COMMENT.POST_ID  IS '게시물아이디';
COMMENT ON COLUMN TB_COMMENT.COM_PARENT_ID  IS '부모댓글아이디';
COMMENT ON COLUMN TB_COMMENT.COM_CONTENT  IS '댓글내용';
COMMENT ON COLUMN TB_COMMENT.COM_TIME  IS '댓글작성날짜';
COMMENT ON COLUMN TB_COMMENT.COM_RECOMMEND  IS '댓글추천수';
COMMENT ON COLUMN TB_COMMENT.COM_REPORT_COUNT  IS '댓글신고수';

CREATE SEQUENCE SEQ_TB_COMMENT_COM_ID
START WITH 1
INCREMENT BY 1
NOCACHE;


-- 게시글 추천 기록 테이블
CREATE TABLE TB_POST_RECOMMEND (
    USER_ID VARCHAR2(50) NOT NULL,
    POST_ID NUMBER NOT NULL,
    PRIMARY KEY (USER_ID, POST_ID),
    CONSTRAINT FK_POST_RECOMMEND_USER FOREIGN KEY (USER_ID) REFERENCES TB_USER(USER_ID),
    CONSTRAINT FK_POST_RECOMMEND_POST FOREIGN KEY (POST_ID) REFERENCES TB_POST(POST_ID)
);

-- 댓글 추천 기록 테이블
CREATE TABLE TB_COM_RECOMMEND (
    USER_ID VARCHAR2(50) NOT NULL,
    COMMENT_ID NUMBER NOT NULL,
    PRIMARY KEY (USER_ID, COMMENT_ID),
    CONSTRAINT FK_COM_RECOMMEND_USER FOREIGN KEY (USER_ID) REFERENCES TB_USER(USER_ID),
    CONSTRAINT FK_COM_RECOMMEND_COMMENT FOREIGN KEY (COMMENT_ID) REFERENCES TB_COMMENT(COM_ID)
);

-- TB_JOB

CREATE TABLE TB_JOB (
    JOB_ID      VARCHAR2(50) PRIMARY KEY,
    JOB_EXPLAIN VARCHAR2(1000),
    JOB_NAME    VARCHAR2(100) NOT NULL
);
CREATE SEQUENCE SEQ_TB_JOB
START WITH 1
INCREMENT BY 1
NOCACHE;
COMMENT ON COLUMN TB_JOB.JOB_ID  IS '직업아이디';
COMMENT ON COLUMN TB_JOB.JOB_NAME  IS '직업 이름';
COMMENT ON COLUMN TB_JOB.JOB_EXPLAIN  IS '직업 설명';


-- TB_SPEC

CREATE TABLE TB_SPEC (
    SPEC_ID        VARCHAR2(50) PRIMARY KEY,
    SPEC_NAME      VARCHAR2(100) NOT NULL,
    SPEC_TYPE      VARCHAR2(50) NOT NULL,
    SPEC_EXPLAIN   VARCHAR2(1000),
    SPEC_STATE     VARCHAR2(50)  DEFAULT 'N'
);
CREATE SEQUENCE SEQ_TB_SPEC
START WITH 1
INCREMENT BY 1
NOCACHE;
COMMENT ON COLUMN TB_SPEC.SPEC_ID  IS '스펙 아이디';
COMMENT ON COLUMN TB_SPEC.SPEC_NAME  IS '스펙 이름';
COMMENT ON COLUMN TB_SPEC.SPEC_TYPE  IS '스펙 유형';
COMMENT ON COLUMN TB_SPEC.SPEC_EXPLAIN  IS '스펙 설명';
COMMENT ON COLUMN TB_SPEC.SPEC_STATE  IS '목표 달성여부';


-- TB_SPEC_SCHEDULE
CREATE TABLE TB_SPEC_SCHEDULE (
    SS_ID     VARCHAR2(50) PRIMARY KEY,
    SPEC_ID   VARCHAR2(50) NOT NULL,
    SS_TYPE   VARCHAR2(50),
    SS_DATE   DATE,
    CONSTRAINT FK_SCHEDULE_SPEC FOREIGN KEY (SPEC_ID) REFERENCES TB_SPEC(SPEC_ID) ON DELETE CASCADE
);
CREATE SEQUENCE SEQ_TB_SPEC_SCHEDULE
START WITH 1
INCREMENT BY 1
NOCACHE;

COMMENT ON COLUMN TB_SPEC_SCHEDULE.SPEC_ID  IS '스펙스케줄 아이디';
COMMENT ON COLUMN TB_SPEC_SCHEDULE.SPEC_ID  IS '스펙 아이디';
COMMENT ON COLUMN TB_SPEC_SCHEDULE.SS_TYPE  IS '일정 유형';
COMMENT ON COLUMN TB_SPEC_SCHEDULE.SS_DATE  IS '날짜';

-- TB_ACTIVITY

CREATE TABLE TB_ACTIVITY (
    ACT_ID       VARCHAR2(50) PRIMARY KEY,
    ACT_CONTENT  VARCHAR2(1000),
    ACT_STATE    VARCHAR2(1)   DEFAULT 'N'
);
CREATE SEQUENCE SEQ_TB_ACTIVITY
START WITH 1
INCREMENT BY 1
NOCACHE;

COMMENT ON COLUMN TB_ACTIVITY.ACT_ID  IS '스펙 활동 아이디';
COMMENT ON COLUMN TB_ACTIVITY.ACT_CONTENT  IS '스펙 활동 내용';
COMMENT ON COLUMN TB_ACTIVITY.ACT_STATE  IS '스펙 활동 상태';


-- TB_CHAT_HISTORY

CREATE TABLE TB_CHAT_HISTORY (
    MSG_ID        NUMBER PRIMARY KEY,
    USER_ID        VARCHAR2(50) NOT NULL,
    CONV_ID     VARCHAR2(50) NOT NULL,
    CONV_TOPIC      VARCHAR2(50),
    CONV_SUBTOPIC_JOBID   VARCHAR2(50),
    CONV_SUBTOPIC_SPECID  VARCHAR2(50),
    ROLE  VARCHAR2(20) CHECK (ROLE IN ('USER', 'BOT')) NOT NULL,
    MSG_CONTENT      VARCHAR2(4000),
    MSG_TIME  TIMESTAMP NOT NULL,
   
    CONSTRAINT FK_CHAT_USER FOREIGN KEY (USER_ID) REFERENCES TB_USER(USER_ID),
    CONSTRAINT FK_CHAT_JOB FOREIGN KEY (CONV_SUBTOPIC_JOBID) REFERENCES TB_JOB(JOB_ID) ON DELETE CASCADE,
    CONSTRAINT FK_CHAT_SPEC FOREIGN KEY (CONV_SUBTOPIC_SPECID) REFERENCES TB_SPEC(SPEC_ID) ON DELETE CASCADE
);

COMMENT ON COLUMN TB_CHAT_HISTORY.MSG_ID is '메시지 아이디';
COMMENT ON COLUMN TB_CHAT_HISTORY.USER_ID is '사용자 아이디';
COMMENT ON COLUMN TB_CHAT_HISTORY.CONV_ID is '대화(세션) 아이디';
COMMENT ON COLUMN TB_CHAT_HISTORY.CONV_TOPIC is '대화(세션) 주제: 직무추천/ 스펙추천/ 활동추천/ 일정추천';
COMMENT ON COLUMN TB_CHAT_HISTORY.CONV_SUBTOPIC_JOBID is '스펙추천 대상 직무 ID';
COMMENT ON COLUMN TB_CHAT_HISTORY.CONV_SUBTOPIC_SPECID is '활동/ 일정 추천 대상 스펙 ID';
COMMENT ON COLUMN TB_CHAT_HISTORY.ROLE is '역할(turn): 사용자/ 챗봇';
COMMENT ON COLUMN TB_CHAT_HISTORY.MSG_CONTENT is '채팅 메세지';
COMMENT ON COLUMN TB_CHAT_HISTORY.MSG_TIME is '메세지 발생 시간';

CREATE SEQUENCE SEQ_MSG_ID
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;


-- TB_CAREER_PLAN

CREATE TABLE TB_CAREER_PLAN (
    JOB_ID        VARCHAR2(50),
    SPEC_ID       VARCHAR2(50),
    ACT_ID        VARCHAR2(50),
    USER_ID       VARCHAR2(50),
    CONSTRAINT FK_CAREER_JOB   FOREIGN KEY (JOB_ID)  REFERENCES TB_JOB(JOB_ID) ON DELETE CASCADE,
    CONSTRAINT FK_CAREER_SPEC  FOREIGN KEY (SPEC_ID) REFERENCES TB_SPEC(SPEC_ID) ON DELETE CASCADE,
    CONSTRAINT FK_CAREER_ACT   FOREIGN KEY (ACT_ID)  REFERENCES TB_ACTIVITY(ACT_ID) ON DELETE CASCADE,
    CONSTRAINT FK_CAREER_USER  FOREIGN KEY (USER_ID) REFERENCES TB_USER(USER_ID) ON DELETE CASCADE,
    CONSTRAINT UNIQUE_COMBINATION UNIQUE (JOB_ID, SPEC_ID, ACT_ID, USER_ID),
    CONSTRAINT CHECK_AVAILABILITY CHECK (NOT (JOB_ID IS NULL AND (SPEC_ID IS NOT NULL OR ACT_ID IS NOT NULL) OR (SPEC_ID IS NULL AND ACT_ID IS NOT NULL)))
);
COMMENT ON COLUMN TB_CAREER_PLAN.JOB_ID is '유저 아이디';
COMMENT ON COLUMN TB_CAREER_PLAN.SPEC_ID is '직무 아이디';
COMMENT ON COLUMN TB_CAREER_PLAN.ACT_ID is '스펙 아이디';
COMMENT ON COLUMN TB_CAREER_PLAN.USER_ID is '활동 아이디';


-- TB_POST_REPORT

CREATE TABLE TB_POST_REPORT(
    REPORT_ID   NUMBER PRIMARY KEY ,
    TARGET_ID   NUMBER NOT NULL,
    REPORT_REASON   VARCHAR2(1000) NOT NULL,
    REPORTED_BY     VARCHAR2(50) NOT NULL,
    REPORT_DATE     DATE  DEFAULT SYSDATE   NOT NULL,
    
    CONSTRAINT FK_POSTREPORT_TARGET FOREIGN KEY (TARGET_ID) REFERENCES TB_POST(POST_ID),
    CONSTRAINT FK_POSTREPORT_USER FOREIGN KEY (REPORTED_BY) REFERENCES TB_USER(USER_ID),
    CONSTRAINT UQ_POSTREPORT_UNIQUE UNIQUE (TARGET_ID, REPORTED_BY)
);
COMMENT ON COLUMN TB_POST_REPORT.REPORT_ID is '신고 아이디';
COMMENT ON COLUMN TB_POST_REPORT.TARGET_ID is '신고한 게시물 아이디';
COMMENT ON COLUMN TB_POST_REPORT.REPORT_REASON is '신고 이유';
COMMENT ON COLUMN TB_POST_REPORT.REPORTED_BY is '신고자의 아이디';
COMMENT ON COLUMN TB_POST_REPORT.REPORT_DATE is '신고 날짜';

CREATE SEQUENCE SEQ_TB_POST_REPORT_REPORT_ID
START WITH 1
INCREMENT BY 1
NOCACHE;


-- TB_COM_REPORT
CREATE TABLE TB_COM_REPORT(
    REPORT_ID   NUMBER PRIMARY KEY ,
    TARGET_ID   NUMBER NOT NULL,
    REPORT_REASON   VARCHAR2(1000) NOT NULL,
    REPORTED_BY     VARCHAR2(50) NOT NULL,
    REPORT_DATE     DATE  DEFAULT SYSDATE   NOT NULL,

    CONSTRAINT FK_COMREPORT_TARGET FOREIGN KEY (TARGET_ID) REFERENCES TB_COMMENT(COM_ID),
    CONSTRAINT FK_COMREPORT_USER FOREIGN KEY (REPORTED_BY) REFERENCES TB_USER(USER_ID),
    CONSTRAINT UQ_COMREPORT_UNIQUE UNIQUE (TARGET_ID, REPORTED_BY)
);
COMMENT ON COLUMN TB_COM_REPORT.REPORT_ID is '신고 아이디';
COMMENT ON COLUMN TB_COM_REPORT.TARGET_ID is '신고한 댓글 아이디';
COMMENT ON COLUMN TB_COM_REPORT.REPORT_REASON is '신고 이유';
COMMENT ON COLUMN TB_COM_REPORT.REPORTED_BY is '신고자의 아이디';
COMMENT ON COLUMN TB_COM_REPORT.REPORT_DATE is '신고 날짜';

CREATE SEQUENCE SEQ_TB_COM_REPORT_REPORT_ID
START WITH 1
INCREMENT BY 1
NOCACHE;

CREATE TABLE TB_JOB_LIST (
    JOB_LIST_ID  VARCHAR2(50) PRIMARY KEY,
    JOB_NAME    VARCHAR2(100) NOT NULL,
    JOB_TYPE      VARCHAR2(50),
    JOB_EXPLAIN VARCHAR2(2000)
);

-- TB_USER
-- 관리자 유저, 일반 로그인
INSERT INTO TB_USER (
    USER_ID,
    USER_PWD,
    USER_NAME,
    USER_EMAIL,
    REGISTDATE,
    USER_UNIVERSITY,
    USER_DEGREE,
    USER_GRADUATE,
    USER_POINT,
    USER_AUTHORITY,
    USER_LOGIN_TYPE
) VALUES (
    'user0', 'user0', '관리자, 일반로그인', 'user0@user0.com', SYSDATE, '해병대', '병사', '졸업', 2.3, '2', 1
);

-- 일반유저, 일반 로그인
INSERT INTO TB_USER (
    USER_ID,
    USER_PWD,
    USER_NAME,
    USER_EMAIL,
    REGISTDATE,
    USER_UNIVERSITY,
    USER_DEGREE,
    USER_GRADUATE,
    USER_POINT,
    USER_AUTHORITY,
    USER_LOGIN_TYPE
) VALUES (
    'user1', 'user1', '일반유저, 일반로그인', 'user1@user1.com', SYSDATE, NULL, NULL, NULL, 4.11, '1', 1
);

-- 일반유저, 소셜(네이버) 로그인
INSERT INTO TB_USER (
    USER_ID,
    USER_PWD,
    USER_NAME,
    USER_EMAIL,
    REGISTDATE,
    USER_UNIVERSITY,
    USER_DEGREE,
    USER_GRADUATE,
    USER_POINT,
    USER_AUTHORITY,
    USER_LOGIN_TYPE
) VALUES (
    'user2', 'user2', '일반유저, 소셜로그인', 'user2@user2.com', SYSDATE, NULL, NULL, NULL, 4.01, '1', 2
);

-- 불량유저, 일반 로그인
INSERT INTO TB_USER (
    USER_ID,
    USER_PWD,
    USER_NAME,
    USER_EMAIL,
    REGISTDATE,
    USER_UNIVERSITY,
    USER_DEGREE,
    USER_GRADUATE,
    USER_POINT,
    USER_AUTHORITY,
    USER_LOGIN_TYPE
) VALUES (
    'user3', 'user3', '불량유저, 일반로그인', 'user3@user3.com', SYSDATE, NULL, NULL, NULL, 3.5, '3', 1
);

-- 탈퇴유저, 일반 로그인
INSERT INTO TB_USER (
    USER_ID,
    USER_PWD,
    USER_NAME,
    USER_EMAIL,
    REGISTDATE,
    USER_UNIVERSITY,
    USER_DEGREE,
    USER_GRADUATE,
    USER_POINT,
    USER_AUTHORITY,
    USER_LOGIN_TYPE
) VALUES (
    'user4', 'user4', '탈퇴유저, 일반로그인', 'user4@user4.com', SYSDATE, NULL, NULL, NULL, 1.9, '4', 1
);






-- TB_JOB

-- 프론트엔드 개발자
INSERT INTO TB_JOB (JOB_ID, JOB_EXPLAIN, JOB_NAME)
VALUES ('1', '프론트엔드 웹 개발을 담당하는 직무입니다.', '프론트엔드 개발자');

-- 백엔드 개발자
INSERT INTO TB_JOB (JOB_ID, JOB_EXPLAIN, JOB_NAME)
VALUES ('2', '백엔드 웹 개발을 담당하는 직무입니다.', '백엔드 개발자');


-- TB_SPEC
-- SPEC_TYPE('자격증', '어학', '인턴십', '봉사활동', '대회', '자기계발')

-- 정보처리기사 자격증
INSERT INTO TB_SPEC (SPEC_ID, SPEC_NAME, SPEC_TYPE, SPEC_EXPLAIN, SPEC_STATE)
VALUES ('1', '정보처리기사', '자격증', '개발자를 위한 기초 자격증', 'N');

-- 풀스택 웹개발 부트캠프 수료
INSERT INTO TB_SPEC (SPEC_ID, SPEC_NAME, SPEC_TYPE, SPEC_EXPLAIN, SPEC_STATE)
VALUES ('2', '코딩 부트캠프 수료', '자기계발', '풀스택 웹개발 부트캠프 수료', 'N');

-- SQLD 자격증
INSERT INTO TB_SPEC (SPEC_ID, SPEC_NAME, SPEC_TYPE, SPEC_EXPLAIN, SPEC_STATE)
VALUES ('3', 'SQLD 자격증', '자격증', '데이터베이스 관리 자격증', 'N');


-- TB_ACTIVITY

-- 정보처리기사 관련 활동
INSERT INTO TB_ACTIVITY (ACT_ID, ACT_CONTENT, ACT_STATE)
VALUES ('1', '수제비 실기 기본서 - https://example.com/book1', 'N');

INSERT INTO TB_ACTIVITY (ACT_ID, ACT_CONTENT, ACT_STATE)
VALUES ('2', '정보처리기사 필기 절대족보 시리즈 - https://example.com/book2', 'N');

INSERT INTO TB_ACTIVITY (ACT_ID, ACT_CONTENT, ACT_STATE)
VALUES ('3', '코딩 부트캠프 수강 - https://example.com/bootcamp', 'N');

INSERT INTO TB_ACTIVITY (ACT_ID, ACT_CONTENT, ACT_STATE)
VALUES ('4', 'Linux 기본 명령어 연습', 'Y');

INSERT INTO TB_ACTIVITY (ACT_ID, ACT_CONTENT, ACT_STATE)
VALUES ('5', 'SQL 데이터베이스 쿼리 작성', 'N');

INSERT INTO TB_ACTIVITY (ACT_ID, ACT_CONTENT, ACT_STATE)
VALUES ('6', 'React.js 프론트엔드 개발', 'Y');

INSERT INTO TB_ACTIVITY (ACT_ID, ACT_CONTENT, ACT_STATE)
VALUES ('7', 'JPA 기반 백엔드 프로젝트 참여', 'Y');

INSERT INTO TB_ACTIVITY (ACT_ID, ACT_CONTENT, ACT_STATE)
VALUES ('8', 'RESTful API 설계 및 구현 연습', 'Y');

INSERT INTO TB_ACTIVITY (ACT_ID, ACT_CONTENT, ACT_STATE)
VALUES ('9', '백엔드 성능 개선 및 로깅 도입 경험', 'N');




-- TB_SPEC_SCHEDULE
-- 정보처리기사 관련 일정

INSERT INTO TB_SPEC_SCHEDULE (SS_ID, SPEC_ID, SS_TYPE, SS_DATE) VALUES
('1', '1', '필기 원서접수 시작', TO_DATE('2025-04-14', 'YYYY-MM-DD'));

INSERT INTO TB_SPEC_SCHEDULE (SS_ID, SPEC_ID, SS_TYPE, SS_DATE) VALUES
('2', '1', '필기 원서접수 마감', TO_DATE('2025-04-17', 'YYYY-MM-DD'));

INSERT INTO TB_SPEC_SCHEDULE (SS_ID, SPEC_ID, SS_TYPE, SS_DATE) VALUES
('3', '1', '필기 시험 시작', TO_DATE('2025-05-10', 'YYYY-MM-DD'));

INSERT INTO TB_SPEC_SCHEDULE (SS_ID, SPEC_ID, SS_TYPE, SS_DATE) VALUES
('4', '1', '필기 시험 마감', TO_DATE('2025-05-30', 'YYYY-MM-DD'));

INSERT INTO TB_SPEC_SCHEDULE (SS_ID, SPEC_ID, SS_TYPE, SS_DATE) VALUES
('5', '1', '실기 원서접수 시작', TO_DATE('2025-06-01', 'YYYY-MM-DD'));

INSERT INTO TB_SPEC_SCHEDULE (SS_ID, SPEC_ID, SS_TYPE, SS_DATE) VALUES
('6', '1', '실기 원서접수 마감', TO_DATE('2025-06-07', 'YYYY-MM-DD'));

INSERT INTO TB_SPEC_SCHEDULE (SS_ID, SPEC_ID, SS_TYPE, SS_DATE) VALUES
('7', '1', '실기 시험 시작', TO_DATE('2025-07-19', 'YYYY-MM-DD'));

INSERT INTO TB_SPEC_SCHEDULE (SS_ID, SPEC_ID, SS_TYPE, SS_DATE) VALUES
('8', '1', '실기 시험 마감', TO_DATE('2025-08-08', 'YYYY-MM-DD'));

INSERT INTO TB_SPEC_SCHEDULE (SS_ID, SPEC_ID, SS_TYPE, SS_DATE) VALUES
('9', '1', '최종 합격자 발표', TO_DATE('2025-09-04', 'YYYY-MM-DD'));




-- TB_CAREER_PLAN

INSERT INTO TB_CAREER_PLAN (JOB_ID, SPEC_ID, ACT_ID, USER_ID)
VALUES ('1', NULL, NULL, 'user0');

INSERT INTO TB_CAREER_PLAN (JOB_ID, SPEC_ID, ACT_ID, USER_ID)
VALUES ('1', '1', NULL, 'user0');

INSERT INTO TB_CAREER_PLAN (JOB_ID, SPEC_ID, ACT_ID, USER_ID)
VALUES ('1', '1', '1', 'user0');

INSERT INTO TB_CAREER_PLAN (JOB_ID, SPEC_ID, ACT_ID, USER_ID)
VALUES ('1', '1', '2', 'user0');

INSERT INTO TB_CAREER_PLAN (JOB_ID, SPEC_ID, ACT_ID, USER_ID)
VALUES ('1', '2', NULL, 'user0');

INSERT INTO TB_CAREER_PLAN (JOB_ID, SPEC_ID, ACT_ID, USER_ID)
VALUES ('1', '2', '3', 'user0');

INSERT INTO TB_CAREER_PLAN (JOB_ID, SPEC_ID, ACT_ID, USER_ID)
VALUES ('1', '2', '4', 'user0');

INSERT INTO TB_CAREER_PLAN (JOB_ID, SPEC_ID, ACT_ID, USER_ID)
VALUES ('2', NULL, NULL, 'user0');

INSERT INTO TB_CAREER_PLAN (JOB_ID, SPEC_ID, ACT_ID, USER_ID)
VALUES ('2', '1', NULL, 'user0');

INSERT INTO TB_CAREER_PLAN (JOB_ID, SPEC_ID, ACT_ID, USER_ID)
VALUES ('2', '1', '5', 'user0');

INSERT INTO TB_CAREER_PLAN (JOB_ID, SPEC_ID, ACT_ID, USER_ID)
VALUES ('2', '1', '6', 'user0');


INSERT INTO TB_CAREER_PLAN (JOB_ID, SPEC_ID, ACT_ID, USER_ID)
VALUES ('2', '3', '7', 'user0');

INSERT INTO TB_CAREER_PLAN (JOB_ID, SPEC_ID, ACT_ID, USER_ID)
VALUES ('2', '3', '8', 'user0');

INSERT INTO TB_CAREER_PLAN (JOB_ID, SPEC_ID, ACT_ID, USER_ID)
VALUES ('1', '3', '9', 'user0');



-- TB_POST
INSERT INTO TB_POST (
    POST_ID, POST_WRITER, POST_TYPE, POST_TITLE, POST_CONTENT, 
    POST_TIME, POST_VIEWCOUNT, POST_REPORT_COUNT, POST_RECOMMEND, 
    POST_SAVEDNAME, POST_ORIGINALNAME
) VALUES (
    SEQ_TB_POST_POST_ID.NEXTVAL, 'user0', '공지', '서비스 점검 안내', '서비스 점검 안내에 대한 내용입니다.',
    TO_DATE('2025-04-02 09:00', 'YYYY-MM-DD HH24:MI'), 0, 2, 0, NULL, NULL
);

INSERT INTO TB_POST (
    POST_ID, POST_WRITER, POST_TYPE, POST_TITLE, POST_CONTENT, 
    POST_TIME, POST_VIEWCOUNT, POST_REPORT_COUNT, POST_RECOMMEND, 
    POST_SAVEDNAME, POST_ORIGINALNAME
) VALUES (
    SEQ_TB_POST_POST_ID.NEXTVAL, 'user0', '공지', '업데이트 알림', '업데이트 알림에 대한 내용입니다.',
    TO_DATE('2025-04-07 09:07', 'YYYY-MM-DD HH24:MI'), 0, 1, 0, NULL, NULL
);

INSERT INTO TB_POST (
    POST_ID, POST_WRITER, POST_TYPE, POST_TITLE, POST_CONTENT, 
    POST_TIME, POST_VIEWCOUNT, POST_REPORT_COUNT, POST_RECOMMEND, 
    POST_SAVEDNAME, POST_ORIGINALNAME
) VALUES (
    SEQ_TB_POST_POST_ID.NEXTVAL, 'user0', '공지', '자주 묻는 질문', '자주 묻는 질문에 대한 내용입니다.',
    TO_DATE('2025-04-08 09:14', 'YYYY-MM-DD HH24:MI'), 0, 0, 0, NULL, NULL
);

INSERT INTO TB_POST (
    POST_ID, POST_WRITER, POST_TYPE, POST_TITLE, POST_CONTENT, 
    POST_TIME, POST_VIEWCOUNT, POST_REPORT_COUNT, POST_RECOMMEND, 
    POST_SAVEDNAME, POST_ORIGINALNAME
) VALUES (
    SEQ_TB_POST_POST_ID.NEXTVAL, 'user0', '공지', '업데이트 알림', '업데이트 알림에 대한 내용입니다.',
    TO_DATE('2025-04-14 09:21', 'YYYY-MM-DD HH24:MI'), 0, 0, 0, NULL, NULL
);

INSERT INTO TB_POST (
    POST_ID, POST_WRITER, POST_TYPE, POST_TITLE, POST_CONTENT, 
    POST_TIME, POST_VIEWCOUNT, POST_REPORT_COUNT, POST_RECOMMEND, 
    POST_SAVEDNAME, POST_ORIGINALNAME
) VALUES (
    SEQ_TB_POST_POST_ID.NEXTVAL, 'user0', '공지', '업데이트 알림', '업데이트 알림에 대한 내용입니다.',
    TO_DATE('2025-04-07 09:28', 'YYYY-MM-DD HH24:MI'), 0, 0, 0, NULL, NULL
);

INSERT INTO TB_POST (
    POST_ID, POST_WRITER, POST_TYPE, POST_TITLE, POST_CONTENT, 
    POST_TIME, POST_VIEWCOUNT, POST_REPORT_COUNT, POST_RECOMMEND, 
    POST_SAVEDNAME, POST_ORIGINALNAME
) VALUES (
    SEQ_TB_POST_POST_ID.NEXTVAL, 'user1', '질문', '자격증 뭐부터 준비할까요?', '자격증 뭐부터 준비할까요?에 대한 내용입니다.',
    TO_DATE('2025-03-25 09:35', 'YYYY-MM-DD HH24:MI'), 0, 0, 0, NULL, NULL
);

INSERT INTO TB_POST (
    POST_ID, POST_WRITER, POST_TYPE, POST_TITLE, POST_CONTENT, 
    POST_TIME, POST_VIEWCOUNT, POST_REPORT_COUNT, POST_RECOMMEND, 
    POST_SAVEDNAME, POST_ORIGINALNAME
) VALUES (
    SEQ_TB_POST_POST_ID.NEXTVAL, 'user1', '질문', '이 강의 들어보신 분?', '이 강의 들어보신 분?에 대한 내용입니다.',
    TO_DATE('2025-04-07 09:42', 'YYYY-MM-DD HH24:MI'), 0, 0, 0, NULL, NULL
);

INSERT INTO TB_POST (
    POST_ID, POST_WRITER, POST_TYPE, POST_TITLE, POST_CONTENT, 
    POST_TIME, POST_VIEWCOUNT, POST_REPORT_COUNT, POST_RECOMMEND, 
    POST_SAVEDNAME, POST_ORIGINALNAME
) VALUES (
    SEQ_TB_POST_POST_ID.NEXTVAL, 'user1', '일반', '이직 고민 중이에요', '이직 고민 중이에요에 대한 내용입니다.',
    TO_DATE('2025-03-21 09:49', 'YYYY-MM-DD HH24:MI'), 0, 0, 0, NULL, NULL
);

INSERT INTO TB_POST (
    POST_ID, POST_WRITER, POST_TYPE, POST_TITLE, POST_CONTENT, 
    POST_TIME, POST_VIEWCOUNT, POST_REPORT_COUNT, POST_RECOMMEND, 
    POST_SAVEDNAME, POST_ORIGINALNAME
) VALUES (
    SEQ_TB_POST_POST_ID.NEXTVAL, 'user1', '질문', '자격증 뭐부터 준비할까요?', '자격증 뭐부터 준비할까요?에 대한 내용입니다.',
    TO_DATE('2025-04-07 09:56', 'YYYY-MM-DD HH24:MI'), 0, 0, 0, NULL, NULL
);

INSERT INTO TB_POST (
    POST_ID, POST_WRITER, POST_TYPE, POST_TITLE, POST_CONTENT, 
    POST_TIME, POST_VIEWCOUNT, POST_REPORT_COUNT, POST_RECOMMEND, 
    POST_SAVEDNAME, POST_ORIGINALNAME
) VALUES (
    SEQ_TB_POST_POST_ID.NEXTVAL, 'user1', '질문', 'Spring vs Node?', 'Spring vs Node?에 대한 내용입니다.',
    TO_DATE('2025-03-27 10:03', 'YYYY-MM-DD HH24:MI'), 0, 0, 0, NULL, NULL
);

INSERT INTO TB_POST (
    POST_ID, POST_WRITER, POST_TYPE, POST_TITLE, POST_CONTENT, 
    POST_TIME, POST_VIEWCOUNT, POST_REPORT_COUNT, POST_RECOMMEND, 
    POST_SAVEDNAME, POST_ORIGINALNAME
) VALUES (
    SEQ_TB_POST_POST_ID.NEXTVAL, 'user2', '질문', 'Spring vs Node?', 'Spring vs Node?에 대한 내용입니다.',
    TO_DATE('2025-03-20 10:10', 'YYYY-MM-DD HH24:MI'), 0, 0, 0, NULL, NULL
);

INSERT INTO TB_POST (
    POST_ID, POST_WRITER, POST_TYPE, POST_TITLE, POST_CONTENT, 
    POST_TIME, POST_VIEWCOUNT, POST_REPORT_COUNT, POST_RECOMMEND, 
    POST_SAVEDNAME, POST_ORIGINALNAME
) VALUES (
    SEQ_TB_POST_POST_ID.NEXTVAL, 'user2', '일반', '좋은 강의 추천', '좋은 강의 추천에 대한 내용입니다.',
    TO_DATE('2025-03-23 10:17', 'YYYY-MM-DD HH24:MI'), 0, 0, 0, NULL, NULL
);

INSERT INTO TB_POST (
    POST_ID, POST_WRITER, POST_TYPE, POST_TITLE, POST_CONTENT, 
    POST_TIME, POST_VIEWCOUNT, POST_REPORT_COUNT, POST_RECOMMEND, 
    POST_SAVEDNAME, POST_ORIGINALNAME
) VALUES (
    SEQ_TB_POST_POST_ID.NEXTVAL, 'user2', '일반', '오늘 뭐 하시나요?', '오늘 뭐 하시나요?에 대한 내용입니다.',
    TO_DATE('2025-04-15 10:24', 'YYYY-MM-DD HH24:MI'), 0, 0, 0, NULL, NULL
);

INSERT INTO TB_POST (
    POST_ID, POST_WRITER, POST_TYPE, POST_TITLE, POST_CONTENT, 
    POST_TIME, POST_VIEWCOUNT, POST_REPORT_COUNT, POST_RECOMMEND, 
    POST_SAVEDNAME, POST_ORIGINALNAME
) VALUES (
    SEQ_TB_POST_POST_ID.NEXTVAL, 'user2', '일반', '스터디 모집합니다', '스터디 모집합니다에 대한 내용입니다.',
    TO_DATE('2025-03-21 10:31', 'YYYY-MM-DD HH24:MI'), 0, 0, 0, NULL, NULL
);

INSERT INTO TB_POST (
    POST_ID, POST_WRITER, POST_TYPE, POST_TITLE, POST_CONTENT, 
    POST_TIME, POST_VIEWCOUNT, POST_REPORT_COUNT, POST_RECOMMEND, 
    POST_SAVEDNAME, POST_ORIGINALNAME
) VALUES (
    SEQ_TB_POST_POST_ID.NEXTVAL, 'user2', '질문', 'SQL 질문 있어요', 'SQL 질문 있어요에 대한 내용입니다.',
    TO_DATE('2025-04-18 10:38', 'YYYY-MM-DD HH24:MI'), 0, 0, 0, NULL, NULL
);

INSERT INTO TB_POST (
    POST_ID, POST_WRITER, POST_TYPE, POST_TITLE, POST_CONTENT, 
    POST_TIME, POST_VIEWCOUNT, POST_REPORT_COUNT, POST_RECOMMEND, 
    POST_SAVEDNAME, POST_ORIGINALNAME
) VALUES (
    SEQ_TB_POST_POST_ID.NEXTVAL, 'user3', '일반', '스터디 모집합니다', '스터디 모집합니다에 대한 내용입니다.',
    TO_DATE('2025-03-23 10:45', 'YYYY-MM-DD HH24:MI'), 0, 0, 0, NULL, NULL
);

INSERT INTO TB_POST (
    POST_ID, POST_WRITER, POST_TYPE, POST_TITLE, POST_CONTENT, 
    POST_TIME, POST_VIEWCOUNT, POST_REPORT_COUNT, POST_RECOMMEND, 
    POST_SAVEDNAME, POST_ORIGINALNAME
) VALUES (
    SEQ_TB_POST_POST_ID.NEXTVAL, 'user3', '질문', 'Spring vs Node?', 'Spring vs Node?에 대한 내용입니다.',
    TO_DATE('2025-04-15 10:52', 'YYYY-MM-DD HH24:MI'), 0, 0, 0, NULL, NULL
);

INSERT INTO TB_POST (
    POST_ID, POST_WRITER, POST_TYPE, POST_TITLE, POST_CONTENT, 
    POST_TIME, POST_VIEWCOUNT, POST_REPORT_COUNT, POST_RECOMMEND, 
    POST_SAVEDNAME, POST_ORIGINALNAME
) VALUES (
    SEQ_TB_POST_POST_ID.NEXTVAL, 'user3', '질문', 'Spring vs Node?', 'Spring vs Node?에 대한 내용입니다.',
    TO_DATE('2025-04-12 10:59', 'YYYY-MM-DD HH24:MI'), 0, 0, 0, NULL, NULL
);

INSERT INTO TB_POST (
    POST_ID, POST_WRITER, POST_TYPE, POST_TITLE, POST_CONTENT, 
    POST_TIME, POST_VIEWCOUNT, POST_REPORT_COUNT, POST_RECOMMEND, 
    POST_SAVEDNAME, POST_ORIGINALNAME
) VALUES (
    SEQ_TB_POST_POST_ID.NEXTVAL, 'user3', '일반', '스터디 모집합니다', '스터디 모집합니다에 대한 내용입니다.',
    TO_DATE('2025-04-16 11:06', 'YYYY-MM-DD HH24:MI'), 0, 0, 0, NULL, NULL
);

INSERT INTO TB_POST (
    POST_ID, POST_WRITER, POST_TYPE, POST_TITLE, POST_CONTENT, 
    POST_TIME, POST_VIEWCOUNT, POST_REPORT_COUNT, POST_RECOMMEND, 
    POST_SAVEDNAME, POST_ORIGINALNAME
) VALUES (
    SEQ_TB_POST_POST_ID.NEXTVAL, 'user3', '질문', 'Spring vs Node?', 'Spring vs Node?에 대한 내용입니다.',
    TO_DATE('2025-04-04 11:13', 'YYYY-MM-DD HH24:MI'), 0, 0, 0, NULL, NULL
);







-- ========================================
--TB_COMMENT: 일반 댓글 삽입
-- ========================================

INSERT INTO TB_COMMENT (COM_ID, COM_WR_ID, POST_ID, COM_PARENT_ID, COM_CONTENT, COM_TIME, COM_RECOMMEND, COM_REPORT_COUNT) VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user1', 1, NULL, '저도 궁금했는데 도움 됐어요.', TO_TIMESTAMP('2025-04-10 09:00', 'YYYY-MM-DD HH24:MI'), 0, 3);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user3', 2, NULL, '내용이 정확하지 않은 것 같아요.', TO_TIMESTAMP('2025-04-10 09:03', 'YYYY-MM-DD HH24:MI'), 0, 1);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user1', 2, NULL, '다시 한번 정리해주실 수 있나요?', TO_TIMESTAMP('2025-04-10 09:06', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user1', 4, NULL, '저도 궁금했는데 도움 됐어요.', TO_TIMESTAMP('2025-04-10 09:09', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user2', 4, NULL, '질문 있어요! 더 설명해 주실 수 있나요?', TO_TIMESTAMP('2025-04-10 09:12', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user0', 4, NULL, '좋은 정보 감사합니다!', TO_TIMESTAMP('2025-04-10 09:15', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user0', 5, NULL, '질문 있어요! 더 설명해 주실 수 있나요?', TO_TIMESTAMP('2025-04-10 09:18', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user0', 7, NULL, '저도 궁금했는데 도움 됐어요.', TO_TIMESTAMP('2025-04-10 09:21', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user1', 8, NULL, '좋은 정보 감사합니다!', TO_TIMESTAMP('2025-04-10 09:24', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user0', 8, NULL, '추가 자료가 있을까요?', TO_TIMESTAMP('2025-04-10 09:27', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user1', 10, NULL, '질문 있어요! 더 설명해 주실 수 있나요?', TO_TIMESTAMP('2025-04-10 09:30', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user3', 11, NULL, '다시 한번 정리해주실 수 있나요?', TO_TIMESTAMP('2025-04-10 09:33', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user1', 11, NULL, '질문 있어요! 더 설명해 주실 수 있나요?', TO_TIMESTAMP('2025-04-10 09:36', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user2', 11, NULL, '공감됩니다!', TO_TIMESTAMP('2025-04-10 09:39', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user1', 13, NULL, '공감됩니다!', TO_TIMESTAMP('2025-04-10 09:42', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user3', 13, NULL, '다시 한번 정리해주실 수 있나요?', TO_TIMESTAMP('2025-04-10 09:45', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user0', 13, NULL, '질문 있어요! 더 설명해 주실 수 있나요?', TO_TIMESTAMP('2025-04-10 09:48', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user2', 14, NULL, '다시 한번 정리해주실 수 있나요?', TO_TIMESTAMP('2025-04-10 09:51', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user1', 14, NULL, '다시 한번 정리해주실 수 있나요?', TO_TIMESTAMP('2025-04-10 09:54', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user3', 14, NULL, '질문 있어요! 더 설명해 주실 수 있나요?', TO_TIMESTAMP('2025-04-10 09:57', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user3', 15, NULL, '잘 보고 갑니다 :)', TO_TIMESTAMP('2025-04-10 10:00', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user0', 16, NULL, '저도 궁금했는데 도움 됐어요.', TO_TIMESTAMP('2025-04-10 10:03', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user1', 18, NULL, '내용이 정확하지 않은 것 같아요.', TO_TIMESTAMP('2025-04-10 10:06', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user3', 18, NULL, '다시 한번 정리해주실 수 있나요?', TO_TIMESTAMP('2025-04-10 10:09', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user0', 18, NULL, '저도 궁금했는데 도움 됐어요.', TO_TIMESTAMP('2025-04-10 10:12', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user3', 19, NULL, '내용이 정확하지 않은 것 같아요.', TO_TIMESTAMP('2025-04-10 10:15', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user0', 19, NULL, '잘 보고 갑니다 :)', TO_TIMESTAMP('2025-04-10 10:18', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user2', 19, NULL, '질문 있어요! 더 설명해 주실 수 있나요?', TO_TIMESTAMP('2025-04-10 10:21', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user3', 20, NULL, '공감됩니다!', TO_TIMESTAMP('2025-04-10 10:24', 'YYYY-MM-DD HH24:MI'), 0, 0);

INSERT INTO TB_COMMENT VALUES
(SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user1', 20, NULL, '내용이 정확하지 않은 것 같아요.', TO_TIMESTAMP('2025-04-10 10:27', 'YYYY-MM-DD HH24:MI'), 0, 0);



-- ========================================
-- TB_COMMENT: 대댓글
-- ========================================

INSERT INTO TB_COMMENT (
    COM_ID, COM_WR_ID, POST_ID, COM_PARENT_ID, COM_CONTENT, COM_TIME, COM_RECOMMEND, COM_REPORT_COUNT
) VALUES (
    SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user1', 2, 2, '→ 대댓글입니다. (부모 2)', TO_TIMESTAMP('2025-04-10 10:30', 'YYYY-MM-DD HH24:MI'), 0, 0
);

INSERT INTO TB_COMMENT VALUES (
    SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user2', 8, 10, '→ 대댓글입니다. (부모 10)', TO_TIMESTAMP('2025-04-10 10:33', 'YYYY-MM-DD HH24:MI'), 0, 0
);

INSERT INTO TB_COMMENT VALUES (
    SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user1', 19, 26, '→ 대댓글입니다. (부모 26)', TO_TIMESTAMP('2025-04-10 10:36', 'YYYY-MM-DD HH24:MI'), 0, 0
);

INSERT INTO TB_COMMENT VALUES (
    SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user2', 14, 18, '→ 대댓글입니다. (부모 18)', TO_TIMESTAMP('2025-04-10 10:39', 'YYYY-MM-DD HH24:MI'), 0, 0
);

INSERT INTO TB_COMMENT VALUES (
    SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user0', 4, 5, '→ 대댓글입니다. (부모 5)', TO_TIMESTAMP('2025-04-10 10:42', 'YYYY-MM-DD HH24:MI'), 0, 0
);

INSERT INTO TB_COMMENT VALUES (
    SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user1', 11, 14, '→ 대댓글입니다. (부모 14)', TO_TIMESTAMP('2025-04-10 10:45', 'YYYY-MM-DD HH24:MI'), 0, 0
);

INSERT INTO TB_COMMENT VALUES (
    SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user2', 19, 27, '→ 대댓글입니다. (부모 27)', TO_TIMESTAMP('2025-04-10 10:48', 'YYYY-MM-DD HH24:MI'), 0, 0
);

INSERT INTO TB_COMMENT VALUES (
    SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user0', 15, 21, '→ 대댓글입니다. (부모 21)', TO_TIMESTAMP('2025-04-10 10:51', 'YYYY-MM-DD HH24:MI'), 0, 0
);

INSERT INTO TB_COMMENT VALUES (
    SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user3', 20, 30, '→ 대댓글입니다. (부모 30)', TO_TIMESTAMP('2025-04-10 10:54', 'YYYY-MM-DD HH24:MI'), 0, 0
);

INSERT INTO TB_COMMENT VALUES (
    SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user1', 11, 12, '→ 대댓글입니다. (부모 12)', TO_TIMESTAMP('2025-04-10 10:57', 'YYYY-MM-DD HH24:MI'), 0, 0
);

INSERT INTO TB_COMMENT VALUES (
    SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user3', 18, 25, '→ 대댓글입니다. (부모 25)', TO_TIMESTAMP('2025-04-10 11:00', 'YYYY-MM-DD HH24:MI'), 0, 0
);

INSERT INTO TB_COMMENT VALUES (
    SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user3', 11, 13, '→ 대댓글입니다. (부모 13)', TO_TIMESTAMP('2025-04-10 11:03', 'YYYY-MM-DD HH24:MI'), 0, 0
);

INSERT INTO TB_COMMENT VALUES (
    SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user0', 14, 19, '→ 대댓글입니다. (부모 19)', TO_TIMESTAMP('2025-04-10 11:06', 'YYYY-MM-DD HH24:MI'), 0, 0
);

INSERT INTO TB_COMMENT VALUES (
    SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user3', 2, 3, '→ 대댓글입니다. (부모 3)', TO_TIMESTAMP('2025-04-10 11:09', 'YYYY-MM-DD HH24:MI'), 0, 0
);

INSERT INTO TB_COMMENT VALUES (
    SEQ_TB_COMMENT_COM_ID.NEXTVAL, 'user2', 8, 9, '→ 대댓글입니다. (부모 9)', TO_TIMESTAMP('2025-04-10 11:12', 'YYYY-MM-DD HH24:MI'), 0, 0
);




-- TB_POST_REPORT


INSERT INTO TB_POST_REPORT (REPORT_ID, TARGET_ID, REPORT_REASON, REPORTED_BY, REPORT_DATE) 
VALUES (SEQ_TB_POST_REPORT_REPORT_ID.NEXTVAL, 1, '상관없는 게시글입니다', 'user3', TO_DATE('2025-04-19', 'YYYY-MM-DD'));

INSERT INTO TB_POST_REPORT (REPORT_ID, TARGET_ID, REPORT_REASON, REPORTED_BY, REPORT_DATE) 
VALUES (SEQ_TB_POST_REPORT_REPORT_ID.NEXTVAL, 1, '중복 내용입니다.', 'user1', TO_DATE('2025-04-20', 'YYYY-MM-DD'));

INSERT INTO TB_POST_REPORT (REPORT_ID, TARGET_ID, REPORT_REASON, REPORTED_BY, REPORT_DATE) 
VALUES (SEQ_TB_POST_REPORT_REPORT_ID.NEXTVAL, 2, '신고 테스트입니다.', 'user1', TO_DATE('2025-04-20', 'YYYY-MM-DD'));




-- TB_COMMENT_REPORT

INSERT INTO TB_COM_REPORT (REPORT_ID, TARGET_ID, REPORT_REASON, REPORTED_BY, REPORT_DATE)  
VALUES (SEQ_TB_COM_REPORT_REPORT_ID.NEXTVAL, 1, '도배가 심합니다.', 'user2', TO_DATE('2025-04-19', 'YYYY-MM-DD'));

INSERT INTO TB_COM_REPORT (REPORT_ID, TARGET_ID, REPORT_REASON, REPORTED_BY, REPORT_DATE) 
VALUES (SEQ_TB_COM_REPORT_REPORT_ID.NEXTVAL, 1, '허위 정보가 포함되었습니다.', 'user1', TO_DATE('2025-04-20', 'YYYY-MM-DD'));

INSERT INTO TB_COM_REPORT (REPORT_ID, TARGET_ID, REPORT_REASON, REPORTED_BY, REPORT_DATE) 
VALUES (SEQ_TB_COM_REPORT_REPORT_ID.NEXTVAL, 3, '그냥 신고해봤습니다', 'user1', TO_DATE('2025-04-20', 'YYYY-MM-DD'));

INSERT INTO TB_COM_REPORT (REPORT_ID, TARGET_ID, REPORT_REASON, REPORTED_BY, REPORT_DATE) 
VALUES (SEQ_TB_COM_REPORT_REPORT_ID.NEXTVAL, 2, '신고수 증가 테스트입니다.', 'user0', TO_DATE('2025-04-21', 'YYYY-MM-DD'));


-- TB_CHAT_HISTORY

-- 직무 추천
-- 📌 BOT: 대화 시작 안내
INSERT INTO TB_CHAT_HISTORY (
  MSG_ID, USER_ID, CONV_ID, CONV_TOPIC, CONV_SUBTOPIC_JOBID, CONV_SUBTOPIC_SPECID,
  ROLE, MSG_CONTENT, MSG_TIME
) VALUES (
  SEQ_MSG_ID.NEXTVAL, 'user0', 'conv0', '직무추천', NULL, NULL,
  'BOT', '안녕하세요, 원하는 직무의 조건이나 사용자님의 취향을 말해주시면 직무를 추천해드려요.',
  SYSTIMESTAMP
);

-- 📌 USER: 관심사 입력
INSERT INTO TB_CHAT_HISTORY (
  MSG_ID, USER_ID, CONV_ID, CONV_TOPIC, CONV_SUBTOPIC_JOBID, CONV_SUBTOPIC_SPECID,
  ROLE, MSG_CONTENT, MSG_TIME
) VALUES (
  SEQ_MSG_ID.NEXTVAL, 'user0', 'conv0', '직무추천', NULL, NULL,
  'USER', '저는 컴퓨터와 문제 해결, ui 구현에 관심이 많아요.',
  SYSTIMESTAMP
);

-- 📌 BOT: 프론트엔드 / 백엔드 직무 추천
INSERT INTO TB_CHAT_HISTORY (
  MSG_ID, USER_ID, CONV_ID, CONV_TOPIC, CONV_SUBTOPIC_JOBID, CONV_SUBTOPIC_SPECID,
  ROLE, MSG_CONTENT, MSG_TIME
) VALUES (
  SEQ_MSG_ID.NEXTVAL, 'user0', 'conv0', '직무추천', NULL, NULL,
  'BOT', '당신처럼 소통에 능하고 문제 해결에 관심이 많은 성향이라면, 소프트웨어 개발 직무가 잘 맞을 수 있습니다. 소프트웨어 개발 관련 직무는 매우 다양하지만, 주요 직무를 역할과 기술 기반으로 나눠서 설명하면 다음과 같아요: \n  ✅ 프론트엔드 (Front-end) 개발자\n  역할: 사용자가 보는 웹 화면(UI)을 개발\n  기술: HTML, CSS, JavaScript, React, Vue.js 등 \n  ✅ 백엔드 (Back-end) 개발자\n  역할: 서버, 데이터베이스, API 등을 개발\n  기술: Java(Spring), Python(Django), Node.js, MySQL, MongoDB 등\n원하는 직무를 저장하시면 관련 스펙을 추천해드립니다.',
  SYSTIMESTAMP
);

-- 📌 USER: 직무 선택(일단 메세지처럼 작성)
INSERT INTO TB_CHAT_HISTORY (
  MSG_ID, USER_ID, CONV_ID, CONV_TOPIC, CONV_SUBTOPIC_JOBID, CONV_SUBTOPIC_SPECID,
  ROLE, MSG_CONTENT, MSG_TIME
) VALUES (
  SEQ_MSG_ID.NEXTVAL, 'user0', 'conv0', '직무추천', NULL, NULL,
  'USER', '프론트엔트 개발자, 백엔드 개발자에 관심 있어.',
  SYSTIMESTAMP
);

-- 📌 BOT: 추가 직무 추천 유도
INSERT INTO TB_CHAT_HISTORY (
  MSG_ID, USER_ID, CONV_ID, CONV_TOPIC, CONV_SUBTOPIC_JOBID, CONV_SUBTOPIC_SPECID,
  ROLE, MSG_CONTENT, MSG_TIME
) VALUES (
  SEQ_MSG_ID.NEXTVAL, 'user0', 'conv0', '직무추천', NULL, NULL,
  'BOT', '직무를 더 찾고 싶다면 말씀해주세요.',
  SYSTIMESTAMP
);


-- 스펙 추천
-- 📌 BOT: 직무 선택 요청
INSERT INTO TB_CHAT_HISTORY (
  MSG_ID, USER_ID, CONV_ID, CONV_TOPIC,
  CONV_SUBTOPIC_JOBID, CONV_SUBTOPIC_SPECID,
  ROLE, MSG_CONTENT, MSG_TIME
) VALUES (
  SEQ_MSG_ID.NEXTVAL, 'user0', 'conv1', '스펙추천',
  NULL, NULL,
  'BOT', '저장된 직무 중 관련 스펙을 찾아보고 싶은 직무를 선택하세요.',
  SYSTIMESTAMP
);

-- 📌 USER: 프론트엔드 관련 스펙 요청
INSERT INTO TB_CHAT_HISTORY (
  MSG_ID, USER_ID, CONV_ID, CONV_TOPIC,
  CONV_SUBTOPIC_JOBID, CONV_SUBTOPIC_SPECID,
  ROLE, MSG_CONTENT, MSG_TIME
) VALUES (
  SEQ_MSG_ID.NEXTVAL, 'user0', 'conv1', '스펙추천',
  '1', NULL,
  'USER', '프론트엔드 개발자 관련 스펙이 궁금해.',
  SYSTIMESTAMP
);

-- 📌 BOT: 스펙 추천 제공
INSERT INTO TB_CHAT_HISTORY (
  MSG_ID, USER_ID, CONV_ID, CONV_TOPIC,
  CONV_SUBTOPIC_JOBID, CONV_SUBTOPIC_SPECID,
  ROLE, MSG_CONTENT, MSG_TIME
) VALUES (
  SEQ_MSG_ID.NEXTVAL, 'user0', 'conv1', '스펙추천',
  '1', NULL,
  'BOT',
  '프론트엔드 개발자가 되기 위해 필요한 자격증 및 교육과정은 다음과 같습니다:\n1. 정보처리기사 자격증\n- 소프트웨어 개발, 운영 능력을 평가하는 자격증으로 IT 분야 전반에 유용합니다.\n2. 웹 디자인 기능사 자격증\n- 시각적 요소를 디자인하며 UI/UX 감각을 기를 수 있습니다.\n3. 프론트엔드 개발 관련 온라인 강좌 이수\n- HTML, CSS, JavaScript, React 등을 배울 수 있으며 수료증 제공 과정도 많습니다.\n4. 코딩 부트캠프 수료\n- 프로젝트 중심의 실습으로 실전 감각을 키울 수 있습니다.\n이러한 과정들은 프론트엔드 개발자로서의 경쟁력을 높여줄 수 있습니다.\n\n이 중에 관심 있는 스펙이 있으시면 저장하세요.',
  SYSTIMESTAMP
);

-- 📌 BOT: 추가 유도 문장
INSERT INTO TB_CHAT_HISTORY (
  MSG_ID, USER_ID, CONV_ID, CONV_TOPIC,
  CONV_SUBTOPIC_JOBID, CONV_SUBTOPIC_SPECID,
  ROLE, MSG_CONTENT, MSG_TIME
) VALUES (
  SEQ_MSG_ID.NEXTVAL, 'user0', 'conv1', '스펙추천',
  '1', NULL,
  'BOT', '프론트엔드 개발자 관련 스펙을 더 찾고 싶으면 알려주세요.',
  SYSTIMESTAMP
);

-- 활동 추천
-- 📌 BOT: 활동 알고 싶은 스펙 선택 요청
INSERT INTO TB_CHAT_HISTORY (
  MSG_ID, USER_ID, CONV_ID, CONV_TOPIC,
  CONV_SUBTOPIC_JOBID, CONV_SUBTOPIC_SPECID,
  ROLE, MSG_CONTENT, MSG_TIME
) VALUES (
  SEQ_MSG_ID.NEXTVAL, 'user0', 'conv3', '활동추천',
  NULL, NULL,
  'BOT', '활동을 알고 싶은 스펙을 선택하세요.',
  SYSTIMESTAMP
);

-- 📌 USER: 정보처리기사 선택
INSERT INTO TB_CHAT_HISTORY (
  MSG_ID, USER_ID, CONV_ID, CONV_TOPIC,
  CONV_SUBTOPIC_JOBID, CONV_SUBTOPIC_SPECID,
  ROLE, MSG_CONTENT, MSG_TIME
) VALUES (
  SEQ_MSG_ID.NEXTVAL, 'user0', 'conv3', '활동추천',
  '1', '1',
  'USER', '정보처리기사',
  SYSTIMESTAMP
);

-- 📌 BOT: 정보처리기사 관련 활동 추천 응답
INSERT INTO TB_CHAT_HISTORY (
  MSG_ID, USER_ID, CONV_ID, CONV_TOPIC,
  CONV_SUBTOPIC_JOBID, CONV_SUBTOPIC_SPECID,
  ROLE, MSG_CONTENT, MSG_TIME
) VALUES (
  SEQ_MSG_ID.NEXTVAL, 'user0', 'conv3', '활동추천',
  '1', '1',
  'BOT',
  '정보처리기사 자격증 준비를 위한 활동으로 다음과 같은 강의와 도서가 추천됩니다:\n\
📺 유튜브 강좌:\n\
- 실기 특강 시리즈 (DB, SQL 등)\n\
- 해커스 자격증 채널\n\
- 필기 한권 요약 강의\n\
📚 Yes24 추천 도서:\n\
- 2025 이기적 정보처리기사 필기+실기 올인원\n\
- 2025 수제비 정보처리기사 실기 기본서\n\
- 2025 시나공 실기/필기 기본서\n\
링크를 통해 자세한 정보를 확인하고 본인에게 맞는 자료를 저장하세요.',
  SYSTIMESTAMP
);

-- 📌 USER: 도서 선택 저장 의사 표현
INSERT INTO TB_CHAT_HISTORY (
  MSG_ID, USER_ID, CONV_ID, CONV_TOPIC,
  CONV_SUBTOPIC_JOBID, CONV_SUBTOPIC_SPECID,
  ROLE, MSG_CONTENT, MSG_TIME
) VALUES (
  SEQ_MSG_ID.NEXTVAL, 'user0', 'conv3', '활동추천',
  '1', '1',
  'USER', '시나공 실기/필기 기본서 저장할게.',
  SYSTIMESTAMP
);

-- 📌 BOT: 더 찾아볼지 유도
INSERT INTO TB_CHAT_HISTORY (
  MSG_ID, USER_ID, CONV_ID, CONV_TOPIC,
  CONV_SUBTOPIC_JOBID, CONV_SUBTOPIC_SPECID,
  ROLE, MSG_CONTENT, MSG_TIME
) VALUES (
  SEQ_MSG_ID.NEXTVAL, 'user0', 'conv3', '활동추천',
  '1', '1',
  'BOT', '정보처리기사 관련 활동을 더 찾아보고 싶으신가요?',
  SYSTIMESTAMP
);


-- 일정 추천
-- 📌 BOT: 일정 알고 싶은 스펙 선택 요청
INSERT INTO TB_CHAT_HISTORY (
  MSG_ID, USER_ID, CONV_ID, CONV_TOPIC,
  CONV_SUBTOPIC_JOBID, CONV_SUBTOPIC_SPECID,
  ROLE, MSG_CONTENT, MSG_TIME
) VALUES (
  SEQ_MSG_ID.NEXTVAL, 'user0', 'conv2', '일정추천',
  NULL, NULL,
  'BOT', '일정을 알고 싶은 스펙을 선택하세요.',
  SYSTIMESTAMP
);

-- 📌 USER: 정보처리기사 선택
INSERT INTO TB_CHAT_HISTORY (
  MSG_ID, USER_ID, CONV_ID, CONV_TOPIC,
  CONV_SUBTOPIC_JOBID, CONV_SUBTOPIC_SPECID,
  ROLE, MSG_CONTENT, MSG_TIME
) VALUES (
  SEQ_MSG_ID.NEXTVAL, 'user0', 'conv2', '일정추천',
  '1', '1',
  'USER', '정보처리기사',
  SYSTIMESTAMP
);

-- 📌 BOT: 정보처리기사 일정 안내 (topic='일정추천')
INSERT INTO TB_CHAT_HISTORY (
  MSG_ID, USER_ID, CONV_ID, CONV_TOPIC,
  CONV_SUBTOPIC_JOBID, CONV_SUBTOPIC_SPECID,
  ROLE, MSG_CONTENT, MSG_TIME
) VALUES (
  SEQ_MSG_ID.NEXTVAL, 'user0', 'conv2', '일정추천',
  '1', '1',
  'BOT',
  '2025년 정보처리기사 시험 일정은 다음과 같습니다:\n\
1. 제1회\n\
- 필기 원서접수: 2025년 1월 13일 ~ 1월 16일\n\
- 필기 시험기간: 2025년 2월 7일 ~ 3월 4일\n\
- 실기 원서접수: 2025년 3월 5일 ~ 3월 11일\n\
- 실기 시험기간: 2025년 4월 19일 ~ 5월 9일\n\
- 최종 합격자 발표: 2025년 6월 5일\n\
\n\
2. 제2회\n\
- 필기 원서접수: 2025년 4월 14일 ~ 4월 17일\n\
- 필기 시험기간: 2025년 5월 10일 ~ 5월 30일\n\
- 실기 원서접수: 2025년 6월 1일 ~ 6월 7일\n\
- 실기 시험기간: 2025년 7월 19일 ~ 8월 8일\n\
- 최종 합격자 발표: 2025년 9월 4일\n\
※ 출처: 한국산업인력공단\n\
저장할 일정을 선택해 저장할 수 있습니다.',
  SYSTIMESTAMP
);

-- 📌 USER: 제2회 일정 저장 의사
INSERT INTO TB_CHAT_HISTORY (
  MSG_ID, USER_ID, CONV_ID, CONV_TOPIC,
  CONV_SUBTOPIC_JOBID, CONV_SUBTOPIC_SPECID,
  ROLE, MSG_CONTENT, MSG_TIME
) VALUES (
  SEQ_MSG_ID.NEXTVAL, 'user0', 'conv2', '일정추천',
  '1', '1',
  'USER', '제 2회 일정을 저장할래.',
  SYSTIMESTAMP
);

-- 📌 BOT: 저장 완료 응답
INSERT INTO TB_CHAT_HISTORY (
  MSG_ID, USER_ID, CONV_ID, CONV_TOPIC,
  CONV_SUBTOPIC_JOBID, CONV_SUBTOPIC_SPECID,
  ROLE, MSG_CONTENT, MSG_TIME
) VALUES (
  SEQ_MSG_ID.NEXTVAL, 'user0', 'conv2', '일정추천',
  '1', '1',
  'BOT', '일정이 저장되었습니다.',
  SYSTIMESTAMP
);




commit;
